memberSearchIndex = [{"p":"com.tknkla.rj.functions","c":"IntBinaryConsumer","l":"accept(int, int)","url":"accept(int,int)"},{"p":"com.tknkla.rj.groups","c":"IntGroupOperator","l":"ADDITIVE"},{"p":"com.tknkla.rj.groups","c":"LongGroupOperator","l":"ADDITIVE"},{"p":"com.tknkla.rj.functions","c":"IntBiFunction","l":"apply(int, int)","url":"apply(int,int)"},{"p":"com.tknkla.rj.groups","c":"GroupOperator","l":"apply(T, T)","url":"apply(T,T)"},{"p":"com.tknkla.rj.functions","c":"TriFunction","l":"apply(T, U, V)","url":"apply(T,U,V)"},{"p":"com.tknkla.rj.groups","c":"IntGroupOperator","l":"applyAsInt(int, int)","url":"applyAsInt(int,int)"},{"p":"com.tknkla.rj.functions","c":"LongToIntBinaryOperator","l":"applyAsInt(long, long)","url":"applyAsInt(long,long)"},{"p":"com.tknkla.rj.functions","c":"IntToLongBinaryOperator","l":"applyAsLong(int, int)","url":"applyAsLong(int,int)"},{"p":"com.tknkla.rj.groups","c":"LongGroupOperator","l":"applyAsLong(long, long)","url":"applyAsLong(long,long)"},{"p":"com.tknkla.rj","c":"RJ","l":"asOperator(IntBinaryPredicate, int, int, int)","url":"asOperator(com.tknkla.rj.functions.IntBinaryPredicate,int,int,int)"},{"p":"com.tknkla.rj","c":"RJ","l":"asOperator(IntBinaryPredicate)","url":"asOperator(com.tknkla.rj.functions.IntBinaryPredicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"asPredicate(IntBinaryOperator, IntPredicate)","url":"asPredicate(java.util.function.IntBinaryOperator,java.util.function.IntPredicate)"},{"p":"com.tknkla.rj.groups","c":"GroupOperator","l":"BIGINTEGER_ADDITIVE"},{"p":"com.tknkla.rj","c":"SetOperator","l":"both"},{"p":"com.tknkla.rj.groups","c":"GroupOperator","l":"cancel(T, T)","url":"cancel(T,T)"},{"p":"com.tknkla.rj.groups","c":"IntGroupOperator","l":"cancelAsInt(int, int)","url":"cancelAsInt(int,int)"},{"p":"com.tknkla.rj.groups","c":"LongGroupOperator","l":"cancelAsLong(long, long)","url":"cancelAsLong(long,long)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(Class<? extends T>, T, T, T[][], BiFunction<T, T, E>, GroupOperator<E>)","url":"compare(java.lang.Class,T,T,T[][],java.util.function.BiFunction,com.tknkla.rj.groups.GroupOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(int, int, int[][], IntBinaryOperator, IntGroupOperator)","url":"compare(int,int,int[][],java.util.function.IntBinaryOperator,com.tknkla.rj.groups.IntGroupOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(int, IntUnaryOperator)","url":"compare(int,java.util.function.IntUnaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(int[], int[], IntBinaryOperator)","url":"compare(int[],int[],java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(IntSupplier...)","url":"compare(java.util.function.IntSupplier...)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(long, long, long[][], LongBinaryOperator, LongGroupOperator)","url":"compare(long,long,long[][],java.util.function.LongBinaryOperator,com.tknkla.rj.groups.LongGroupOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(long[], long[], LongToIntBinaryOperator)","url":"compare(long[],long[],com.tknkla.rj.functions.LongToIntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"compare(T[], T[], Comparator<T>)","url":"compare(T[],T[],java.util.Comparator)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"create(int, int)","url":"create(int,int)"},{"p":"com.tknkla.rj","c":"RJ","l":"decodeUndirected(BigInteger)","url":"decodeUndirected(java.math.BigInteger)"},{"p":"com.tknkla.rj","c":"RJ","l":"decodeUndirected(IntPredicate)","url":"decodeUndirected(java.util.function.IntPredicate)"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"defaultCondition(int, int)","url":"defaultCondition(int,int)"},{"p":"com.tknkla.rj","c":"SetOperator","l":"DIFF"},{"p":"com.tknkla.rj","c":"SetOperator","l":"EMPTY"},{"p":"com.tknkla.rj","c":"RJ","l":"EMPTY_INT"},{"p":"com.tknkla.rj","c":"RJ","l":"EMPTY_LONG"},{"p":"com.tknkla.rj","c":"RJ","l":"empty(Class<? extends T>)","url":"empty(java.lang.Class)"},{"p":"com.tknkla.rj","c":"RJ","l":"encodeUndirected(int, IntBinaryPredicate, IntConsumer)","url":"encodeUndirected(int,com.tknkla.rj.functions.IntBinaryPredicate,java.util.function.IntConsumer)"},{"p":"com.tknkla.rj","c":"RJ","l":"encodeUndirected(int, IntBinaryPredicate)","url":"encodeUndirected(int,com.tknkla.rj.functions.IntBinaryPredicate)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"execute(Consumer<Runnable>)","url":"execute(java.util.function.Consumer)"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"execute(Consumer<Runnable>)","url":"execute(java.util.function.Consumer)"},{"p":"com.tknkla.rj","c":"RJ","l":"execute(int, int, int, IntUnaryOperator, IntBinaryOperator)","url":"execute(int,int,int,java.util.function.IntUnaryOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"execute(int, int, IntConsumer)","url":"execute(int,int,java.util.function.IntConsumer)"},{"p":"com.tknkla.rj","c":"RJ","l":"execute(int, int, long, IntToLongFunction, LongBinaryOperator)","url":"execute(int,int,long,java.util.function.IntToLongFunction,java.util.function.LongBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"execute(int, int, T, IntFunction<T>, BinaryOperator<T>)","url":"execute(int,int,T,java.util.function.IntFunction,java.util.function.BinaryOperator)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"executeAsInt(Consumer<IntConsumer>)","url":"executeAsInt(java.util.function.Consumer)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"executeAsLong(Consumer<LongConsumer>)","url":"executeAsLong(java.util.function.Consumer)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"executeAsObj(Consumer<Consumer<T>>)","url":"executeAsObj(java.util.function.Consumer)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"fork(int)"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"fork(int)"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"ForkJoinPoolExecutionStrategy(ForkJoinPool, IntBinaryPredicate)","url":"%3Cinit%3E(java.util.concurrent.ForkJoinPool,com.tknkla.rj.functions.IntBinaryPredicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"getExecutor()"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"getPool()"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(Class<? extends T>, int, IntFunction<T>, Comparator<T>, Comparator<T>)","url":"groups(java.lang.Class,int,java.util.function.IntFunction,java.util.Comparator,java.util.Comparator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(Class<? extends T>, T[][], BiFunction<T, T, E>, GroupOperator<E>, Comparator<T>)","url":"groups(java.lang.Class,T[][],java.util.function.BiFunction,com.tknkla.rj.groups.GroupOperator,java.util.Comparator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(Class<? extends T>, T[][], Comparator<T>, Comparator<T>)","url":"groups(java.lang.Class,T[][],java.util.Comparator,java.util.Comparator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(int, IntToLongFunction, LongToIntBinaryOperator, LongToIntBinaryOperator)","url":"groups(int,java.util.function.IntToLongFunction,com.tknkla.rj.functions.LongToIntBinaryOperator,com.tknkla.rj.functions.LongToIntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(int, IntUnaryOperator, IntBinaryOperator, IntBinaryOperator)","url":"groups(int,java.util.function.IntUnaryOperator,java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(int[][], IntBinaryOperator, IntBinaryOperator)","url":"groups(int[][],java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(int[][], IntBinaryOperator, IntGroupOperator, IntBinaryOperator)","url":"groups(int[][],java.util.function.IntBinaryOperator,com.tknkla.rj.groups.IntGroupOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(long[][], LongBinaryOperator, LongGroupOperator, LongToIntBinaryOperator)","url":"groups(long[][],java.util.function.LongBinaryOperator,com.tknkla.rj.groups.LongGroupOperator,com.tknkla.rj.functions.LongToIntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"groups(long[][], LongToIntBinaryOperator, LongToIntBinaryOperator)","url":"groups(long[][],com.tknkla.rj.functions.LongToIntBinaryOperator,com.tknkla.rj.functions.LongToIntBinaryOperator)"},{"p":"com.tknkla.rj.groups","c":"GroupOperator","l":"identity()"},{"p":"com.tknkla.rj.groups","c":"IntGroupOperator","l":"identityAsInt()"},{"p":"com.tknkla.rj.groups","c":"LongGroupOperator","l":"identityAsLong()"},{"p":"com.tknkla.rj","c":"SetOperator","l":"ISECT"},{"p":"com.tknkla.rj","c":"RJ","l":"join(Class<? extends T>, int, IntFunction<T[]>)","url":"join(java.lang.Class,int,java.util.function.IntFunction)"},{"p":"com.tknkla.rj","c":"RJ","l":"join(int[], int[], int[])","url":"join(int[],int[],int[])"},{"p":"com.tknkla.rj","c":"RJ","l":"join(int[], int[])","url":"join(int[],int[])"},{"p":"com.tknkla.rj","c":"RJ","l":"join(long[], long[], long[])","url":"join(long[],long[],long[])"},{"p":"com.tknkla.rj","c":"RJ","l":"join(long[], long[])","url":"join(long[],long[])"},{"p":"com.tknkla.rj","c":"RJ","l":"join(T[], T[], T[])","url":"join(T[],T[],T[])"},{"p":"com.tknkla.rj","c":"RJ","l":"join(T[], T[])","url":"join(T[],T[])"},{"p":"com.tknkla.rj","c":"RJ","l":"joinAsInt(int, IntFunction<int[]>)","url":"joinAsInt(int,java.util.function.IntFunction)"},{"p":"com.tknkla.rj","c":"RJ","l":"joinAsLong(int, IntFunction<long[]>)","url":"joinAsLong(int,java.util.function.IntFunction)"},{"p":"com.tknkla.rj","c":"SetOperator","l":"LDIFF"},{"p":"com.tknkla.rj","c":"SetOperator","l":"left"},{"p":"com.tknkla.rj","c":"SetOperator","l":"LEFT"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"LOCAL"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(Class<? extends T>, int, IntFunction<T[]>, Comparator<T>, BinaryOperator<T>, SetOperator)","url":"merge(java.lang.Class,int,java.util.function.IntFunction,java.util.Comparator,java.util.function.BinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(Class<? extends T>, T[], T[], Comparator<T>, BinaryOperator<T>, SetOperator)","url":"merge(java.lang.Class,T[],T[],java.util.Comparator,java.util.function.BinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(int, IntFunction<int[]>, IntBinaryOperator, IntBinaryOperator, SetOperator)","url":"merge(int,java.util.function.IntFunction,java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(int, IntFunction<long[]>, LongToIntBinaryOperator, LongBinaryOperator, SetOperator)","url":"merge(int,java.util.function.IntFunction,com.tknkla.rj.functions.LongToIntBinaryOperator,java.util.function.LongBinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(int[], int[], IntBinaryOperator, IntBinaryOperator, SetOperator)","url":"merge(int[],int[],java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"merge(long[], long[], LongToIntBinaryOperator, LongBinaryOperator, SetOperator)","url":"merge(long[],long[],com.tknkla.rj.functions.LongToIntBinaryOperator,java.util.function.LongBinaryOperator,com.tknkla.rj.SetOperator)"},{"p":"com.tknkla.rj","c":"SetOperator","l":"of(boolean, boolean, boolean)","url":"of(boolean,boolean,boolean)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(Class<? extends T>, int, IntFunction<T>, Comparator<T>, BinaryOperator<T>)","url":"order(java.lang.Class,int,java.util.function.IntFunction,java.util.Comparator,java.util.function.BinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(Class<? extends T>, T[][], BiFunction<T, T, E>, GroupOperator<E>, Comparator<T>)","url":"order(java.lang.Class,T[][],java.util.function.BiFunction,com.tknkla.rj.groups.GroupOperator,java.util.Comparator)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(int, IntToLongFunction, LongToIntBinaryOperator, LongBinaryOperator)","url":"order(int,java.util.function.IntToLongFunction,com.tknkla.rj.functions.LongToIntBinaryOperator,java.util.function.LongBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(int, IntUnaryOperator, IntBinaryOperator, IntBinaryOperator)","url":"order(int,java.util.function.IntUnaryOperator,java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(int[][], IntBinaryOperator, IntGroupOperator, IntBinaryOperator)","url":"order(int[][],java.util.function.IntBinaryOperator,com.tknkla.rj.groups.IntGroupOperator,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"order(long[][], LongBinaryOperator, LongGroupOperator, LongToIntBinaryOperator)","url":"order(long[][],java.util.function.LongBinaryOperator,com.tknkla.rj.groups.LongGroupOperator,com.tknkla.rj.functions.LongToIntBinaryOperator)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"PARALLEL"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(Class<? extends T>, int, int, IntBiFunction<T>)","url":"populate(java.lang.Class,int,int,com.tknkla.rj.functions.IntBiFunction)"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(Class<? extends T>, int, IntFunction<T>)","url":"populate(java.lang.Class,int,java.util.function.IntFunction)"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(int, int, IntBinaryOperator)","url":"populate(int,int,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(int, int, IntToLongBinaryOperator)","url":"populate(int,int,com.tknkla.rj.functions.IntToLongBinaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(int, IntToLongFunction)","url":"populate(int,java.util.function.IntToLongFunction)"},{"p":"com.tknkla.rj","c":"RJ","l":"populate(int, IntUnaryOperator)","url":"populate(int,java.util.function.IntUnaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"propagate(Class<? extends T>, T[][], BiFunction<T, T, E>, Comparator<T>, GroupOperator<E>, Predicate<T[][]>)","url":"propagate(java.lang.Class,T[][],java.util.function.BiFunction,java.util.Comparator,com.tknkla.rj.groups.GroupOperator,java.util.function.Predicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"propagate(int[][], IntBinaryOperator, IntBinaryOperator, IntGroupOperator, Predicate<int[][]>)","url":"propagate(int[][],java.util.function.IntBinaryOperator,java.util.function.IntBinaryOperator,com.tknkla.rj.groups.IntGroupOperator,java.util.function.Predicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"propagate(long[][], LongBinaryOperator, LongToIntBinaryOperator, LongGroupOperator, Predicate<long[][]>)","url":"propagate(long[][],java.util.function.LongBinaryOperator,com.tknkla.rj.functions.LongToIntBinaryOperator,com.tknkla.rj.groups.LongGroupOperator,java.util.function.Predicate)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"queue(Consumer<Consumer<T>>, Consumer<Consumer<T>>, Consumer<Consumer<T>>, Consumer<R>, TriFunction<T, T, T, R>)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,com.tknkla.rj.functions.TriFunction)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"queue(Consumer<Consumer<T>>, Consumer<Consumer<T>>, Consumer<R>, BiFunction<T, T, R>)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.util.function.BiFunction)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"queue(Consumer<IntConsumer>, Consumer<IntConsumer>, IntConsumer, IntBinaryOperator)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.util.function.IntConsumer,java.util.function.IntBinaryOperator)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"queue(Consumer<LongConsumer>, Consumer<LongConsumer>, LongConsumer, LongBinaryOperator)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.util.function.LongConsumer,java.util.function.LongBinaryOperator)"},{"p":"com.tknkla.rj","c":"ExecutionStrategy","l":"queue(Consumer<Runnable>, Consumer<Runnable>, Runnable)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)"},{"p":"com.tknkla.rj","c":"ForkJoinPoolExecutionStrategy","l":"queue(Consumer<Runnable>, Consumer<Runnable>, Runnable)","url":"queue(java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)"},{"p":"com.tknkla.rj","c":"RJ","l":"randomBinary(int, double, double, Random)","url":"randomBinary(int,double,double,java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"randomOrder(int, Random)","url":"randomOrder(int,java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"randomUndirected(int, double, double, Random)","url":"randomUndirected(int,double,double,java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"randomUndirectedAsymmetric(int, double, Random)","url":"randomUndirectedAsymmetric(int,double,java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"randomUndirectedSymmetric(int, double, Random)","url":"randomUndirectedSymmetric(int,double,java.util.Random)"},{"p":"com.tknkla.rj","c":"SetOperator","l":"RDIFF"},{"p":"com.tknkla.rj","c":"SetOperator","l":"right"},{"p":"com.tknkla.rj","c":"SetOperator","l":"RIGHT"},{"p":"com.tknkla.rj","c":"RJ","l":"search(int, int, IntBinaryPredicate)","url":"search(int,int,com.tknkla.rj.functions.IntBinaryPredicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"search(int, int, IntPredicate)","url":"search(int,int,java.util.function.IntPredicate)"},{"p":"com.tknkla.rj","c":"RJ","l":"search(int, int, IntUnaryOperator)","url":"search(int,int,java.util.function.IntUnaryOperator)"},{"p":"com.tknkla.rj","c":"RJ","l":"setExecutor(ExecutionStrategy)","url":"setExecutor(com.tknkla.rj.ExecutionStrategy)"},{"p":"com.tknkla.rj","c":"RJ","l":"shuffle(int, int, IntBinaryConsumer, Random)","url":"shuffle(int,int,com.tknkla.rj.functions.IntBinaryConsumer,java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"shuffle(int[], Random)","url":"shuffle(int[],java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"shuffle(long[], Random)","url":"shuffle(long[],java.util.Random)"},{"p":"com.tknkla.rj","c":"RJ","l":"shuffle(T[], Random)","url":"shuffle(T[],java.util.Random)"},{"p":"com.tknkla.rj.groups","c":"IntGroupOperator","l":"signum(int)"},{"p":"com.tknkla.rj.groups","c":"LongGroupOperator","l":"signum(long)"},{"p":"com.tknkla.rj.groups","c":"GroupOperator","l":"signum(T)"},{"p":"com.tknkla.rj.functions","c":"IntBinaryPredicate","l":"test(int, int)","url":"test(int,int)"},{"p":"com.tknkla.rj","c":"RJ","l":"UNDIRECTED_COMPLETE"},{"p":"com.tknkla.rj","c":"RJ","l":"UNDIRECTED_EMPTY"},{"p":"com.tknkla.rj","c":"SetOperator","l":"UNION"},{"p":"com.tknkla.rj","c":"SetOperator","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.tknkla.rj","c":"SetOperator","l":"values()"},{"p":"com.tknkla.rj","c":"RJ","l":"verticesOfUndirected(BigInteger)","url":"verticesOfUndirected(java.math.BigInteger)"},{"p":"com.tknkla.rj","c":"RJ","l":"verticesOfUndirected(int)"},{"p":"com.tknkla.rj","c":"RJ","l":"wrap(Class<? extends T>)","url":"wrap(java.lang.Class)"},{"p":"com.tknkla.rj","c":"RJ","l":"wrap(T)"}]